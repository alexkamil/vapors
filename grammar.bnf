<exp> ::= <terminal_exp> | <grouped_exp> | ( <whitespace> <logical_infix> <whitespace> <exp> )+

/* TODO: Should this require an infix_exp? */
<grouped_exp> ::= "(" <whitespace> <exp> <whitespace> ")"

<logical_infix> ::= "and" | "or"

/* TODO: Support these as well? */
/* <and> ::= "and(" <whitespace> <exp> ( <comma_sep> <exp> )* <whitespace> ")" */
/* or ::= "or(" <whitespace> <exp> ( <comma_sep> <exp> )* <whitespace> ")" */

<terminal_exp> ::= <has> | <with_fact_type>

<value_exp> ::= <value_equality> | <numeric_comparison> | <list_contains>

<value_equality> ::= <fact_selector> <whitespace> <equality_operator> <whitespace> <value>

<numeric_comparison> ::= <fact_selector> <whitespace> <comparison_operator> <whitespace> <number>

<list_contains> ::= <fact_selector> <whitespace> "in" <whitespace> <list>

<equality_operator> ::= "==" | "!="

<comparison_operator> ::= <equality_operator> | ">" | ">=" | "<" | "<="

<has> ::= "has(" <whitespace> <fact> <whitespace> ")"

<with_fact_type> ::=
  "withFactType(" <whitespace> <fact_type> <comma_sep> <fact_type> <whitespace> ")" <whitespace> "{"
  <whitespace> <value_exp> <whitespace> <nl>
  <whitespace> "}"

<fact> ::= "fact(" <whitespace> <identifier> <comma_sep> <value> <whitespace> ")"

<fact_selector> ::= "_." <fact_field>

<fact_field> ::= "availableAt" | "quality" | "source" | <fact_value_selector>

<fact_value_selector> ::= "data" <field_selector>*

<field_selector> ::= "." <identifier>

<fact_type> ::= "date_of_birth" | "gender" | "bmi" | "total_chol" | "probability_to_engage"

<scalar_value> ::= <number> | <string>

<value> ::= <scalar_value> | <list>

<nl> ::= "\n" | "\n\r"

<inline_space_char> ::= " " | "\t"

<inline_space> ::= <inline_space_char>*

<whitespace_char> ::= <inline_space_char> | <nl>

<whitespace> ::= <whitespace_char>*

<comma_sep> ::= <whitespace> "," <whitespace>

<identifier> ::= <alpha_letter> <identifier_char>*

<identifier_char> ::= <alpha_letter> | <digit> | "_" | "-"

<uppercase_letter> ::=
  "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" |
  "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"

<lowercase_letter> ::=
  "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" |
  "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

<alpha_letter> ::= <uppercase_letter> | <lowercase_letter>

<natural_digit> ::= "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

<digit> ::= "0" | <natural_digit>

<posint> ::= <natural_digit> <digit>*

<int> ::= ( "-" )? <posint>

<float> ::= ( "-" )? <posint> "." <posint>

<non_quote_char> ::=
  <alpha_letter> | <digit> | " " | "." | "?" | "_" | "-" | ">" | "<" | "=" |
  "!" | "@" | "#" | "$" | "%" | "^" | "&" | "*" | "(" | ")"

<single_quote_string> ::= "'" ( <non_quote_char> | "\"" )* "'"

<double_quote_string> ::= "\"" ( <non_quote_char> | "'" )* "\""

<string> ::= <single_quote_string> | <double_quote_string>

<number> ::= <int> | <float>

<repeat_numbers> ::= <number> ( "," <whitespace> <number> )*

<repeat_strings> ::= <string> ( "," <whitespace> <string> )*

<list> ::= "[" <whitespace> ( <repeat_numbers> | <repeat_strings> )+ <whitespace> "]"
